---
import { useTranslations } from '../i18n/translations';

const t = useTranslations(Astro.currentLocale);

const units = {
 length: ['mm', 'cm', 'm', 'km', 'in', 'ft', 'yd', 'mi'],
 weight: ['mg', 'g', 'kg', 'oz', 'lb'],
 volume: ['ml', 'l', 'pt', 'qt', 'gal']
};
---

<div class="p-4 max-w-xl mx-auto">
 <h1 class="text-2xl font-bold mb-4">{t('title')}</h1>
 
 <div class="space-y-4">
   <select id="unit-type" class="w-full p-2 border rounded">
     <option value="length">{t('length')}</option>
     <option value="weight">{t('weight')}</option>
     <option value="volume">{t('volume')}</option>
   </select>

   <div class="grid grid-cols-2 gap-4">
     <input type="number" id="from-value" class="p-2 border rounded" value="1" />
     <select id="from-unit" class="p-2 border rounded"></select>
     
     <input type="number" id="to-value" class="p-2 border rounded" readonly />
     <select id="to-unit" class="p-2 border rounded"></select>
   </div>
 </div>
</div>

<script>
const units = {
 length: {
   mm: 0.001,
   cm: 0.01,
   m: 1,
   km: 1000,
   in: 0.0254,
   ft: 0.3048,
   yd: 0.9144,
   mi: 1609.344
 },
 weight: {
   mg: 0.000001,
   g: 0.001,
   kg: 1,
   oz: 0.028349523125,
   lb: 0.45359237
 },
 volume: {
   ml: 0.001,
   l: 1,
   pt: 0.473176473,
   qt: 0.946352946,
   gal: 3.78541178
 }
};

function convert() {
 const type = (document.getElementById('unit-type') as HTMLSelectElement).value;
 const fromValue = parseFloat((document.getElementById('from-value') as HTMLInputElement).value);
 const fromUnit = (document.getElementById('from-unit') as HTMLSelectElement).value;
 const toUnit = (document.getElementById('to-unit') as HTMLSelectElement).value;

 if (!isNaN(fromValue)) {
   const baseValue = fromValue * units[type][fromUnit];
   const result = baseValue / units[type][toUnit];
   (document.getElementById('to-value') as HTMLInputElement).value = result.toFixed(6);
 }
}

function updateUnitOptions() {
 const type = (document.getElementById('unit-type') as HTMLSelectElement).value;
 const fromSelect = document.getElementById('from-unit') as HTMLSelectElement;
 const toSelect = document.getElementById('to-unit') as HTMLSelectElement;

 fromSelect.innerHTML = '';
 toSelect.innerHTML = '';

 Object.keys(units[type]).forEach(unit => {
   fromSelect.add(new Option(unit, unit));
   toSelect.add(new Option(unit, unit));
 });

 if (toSelect.options.length > 1) {
   toSelect.selectedIndex = 1;
 }

 convert();
}

document.getElementById('unit-type')?.addEventListener('change', updateUnitOptions);
document.getElementById('from-value')?.addEventListener('input', convert);
document.getElementById('from-unit')?.addEventListener('change', convert);
document.getElementById('to-unit')?.addEventListener('change', convert);

updateUnitOptions();
</script>
